{"version":3,"sources":["components/Header.js","services/UtilService.js","components/TicketPreview.js","components/TicketList.js","components/SortBySelect.js","components/SortTicket.js","components/TicketNavBar.js","store/Types.js","services/LocalStorageService.js","services/TicketService.js","store/actions/TicketAction.js","services/AlertService.js","pages/TicketApp.js","pages/TicketDetails.js","pages/TicketEdit.js","App.js","store/reducers/TicketReducer.js","store/reducers/index.js","serviceWorker.js","index.js"],"names":["Header","className","to","makeId","length","txt","possible","i","charAt","Math","floor","random","dateConvertor","date","Date","getUTCDate","getUTCMonth","getUTCFullYear","TicketPreview","props","ticket","_id","subject","body","UtilService","createdAt","dueDate","onClick","e","preventDefault","onTicketRemove","TicketList","sortBy","ticketList","tickets","sort","firstTicket","secondTicket","firstValue","order","secondValue","isFinite","key","map","SortBySelect","select","selectList","options","option","title","value","name","defaultValue","isSelected","onChange","ev","sortSelected","target","SortTicket","useSelector","state","TicketReducer","onSetSortBy","TicketNavBar","Types","ADD_TICKET","UPDATE_TICKET","REMOVE_TICKET","SET_TICKET","SET_TICKETS","SET_SORT_BY","save","load","removeOne","id","updatedList","filter","removeAll","localStorage","removeItem","setItem","JSON","stringify","parse","getItem","query","add","remove","update","getById","a","LocalStorageService","demoTicketsList","unshift","updatedTicketsList","idx","findIndex","currTicket","splice","find","setTicket","type","setTickets","addTicket","removeTicket","updateTicket","updateSort","dispatch","setSortBy","err","TicketService","addedTicket","eventAlert","Swal","fire","showConfirmButton","timer","confirmAlert","icon","cancelButtonColor","confirmButtonText","cancelButtonText","showCancelButton","confirmButtonColor","res","TicketApp","useDispatch","AlertService","updatedSortBy","TicketDetails","match","params","useEffect","history","push","TicketEdit","useState","onEditTicket","onTicketSubmit","now","onSubmit","placeholder","rows","App","path","component","initState","action","combinedReducer","combineReducers","Boolean","window","location","hostname","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2bee766.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <section className = \"header-section\">\n            <Link to = \"/\">\n                <i className=\"fas fa-check-double\"></i>\n                <h1 className = \"header-title\">Tickets</h1>\n            </Link>\n        </section>\n    )\n}\n\nexport default Header;","export default {\n    makeId,\n    dateConvertor\n}\n\nfunction makeId(length = 10) {\n    let txt = ''\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n      txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return txt;\n}\n\nfunction dateConvertor(date) {\n  date = new Date( date )\n  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n                'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  return date.getUTCDate() + ' ' + months[date.getUTCMonth()] + ', ' + date.getUTCFullYear();\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport UtilService from '../services/UtilService';\n\nconst TicketPreview = props => {\n    const { ticket } = props;\n    \n    return (\n        <section className = \"ticket-preview\">\n            <Link to = {`/ticket/${ticket._id}`}>\n                <h1 className = \"title\">{ticket.subject}</h1>\n                <h2 className = \"body\">{ticket.body}</h2>  \n                <h2 className = \"create-at\">{UtilService.dateConvertor(ticket.createdAt)}</h2> \n                <h2 className = \"due-date\">{ticket.dueDate ? UtilService.dateConvertor(ticket.dueDate) : 'Off'}</h2>\n                <button onClick = { (e) => {\n                    e.preventDefault()\n                    props.onTicketRemove(ticket._id) \n                }}><i className=\"fas fa-trash-alt\"></i></button>\n                <Link to = {`/ticket/edit/${ticket._id}`} ><i className=\"fas fa-edit\"></i> </Link>\n            </Link>\n        </section>\n    )\n}\n\nexport default TicketPreview;","import React from 'react';\nimport TicketPreview from './TicketPreview';\n\nconst TicketList = props => {    \n    const { sortBy } = props;\n\n    const sortedTickets = props.tickets.sort((firstTicket, secondTicket) => {\n            const firstValue = sortBy.order === '-1' ? firstTicket : secondTicket;\n            const secondValue = sortBy.order === '-1' ? secondTicket : firstTicket;\n            \n            return isFinite(firstValue[sortBy.key]-secondValue[sortBy.key]) \n                ? firstValue[sortBy.key]-secondValue[sortBy.key] \n                : isFinite(firstValue[sortBy.key]) ? -1 : 1;\n        })\n\n    const ticketList = sortedTickets.map(ticket => {\n        return (\n            <li className = \"ticket-list-li\" key = { ticket._id } >\n                <TicketPreview ticket = { ticket } onTicketRemove = { props.onTicketRemove }/>\n            </li>\n        )\n    });\n        \n    return (\n        <ul className = \"ticket-list clean-list\">\n            { ticketList }\n        </ul>\n    )\n};\n\nexport default TicketList;","import React from  'react';\n\nconst SortBySelect = props => {\n   const { select } = props;\n\n   const selectList = select.options.map( option => {\n       return (\n            <option key = { option.title } value = { option.value } name = { select.name } defaultValue = { option.isSelected }>\n                { option.title }\n            </option>\n        ) \n   })\n\n    return (\n        <select className = \"sort-by-select\" \n            \n            onChange = { \n                ev => { \n                    props.sortSelected( \n                    { name: select.name, value: ev.target.value} )\n                } \n            }\n        >   \n            {selectList}\n\n        </select>\n    )\n}\n\nexport default SortBySelect;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport SortBySelect from './SortBySelect';\n\nconst SortTicket = props => {\n    const sortBy = useSelector(state => state.TicketReducer.sortBy);\n    \n    return (\n        <section className = \"sort-ticket\" >\n            <SortBySelect \n                select = {{\n                    name: 'key',\n                    options: [\n                        { value: 'createdAt', title: 'Created Date', isSelected: sortBy.key === 'createdAt' },\n                        { value: 'dueDate', title: 'Due Date', isSelected: sortBy.key === 'dueDate' }\n                    ]\n                }}\n                sortSelected = { props.onSetSortBy } \n            />\n            <SortBySelect \n                select = {{\n                    name: 'order',\n                    options: [\n                        { value: '1', title: 'Newer to Older', isSelected: sortBy.order === '1' },\n                        { value: '-1', title: 'Older to Newer', isSelected: sortBy.order === '-1' }\n                    ]\n                }}\n                sortSelected = { props.onSetSortBy }\n            />\n        </section>\n    )\n}\n\nexport default SortTicket;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport SortTicket from './SortTicket';\n\nconst TicketNavBar = props => {\n\n    return (\n        <nav className = \"ticket-nav-bar\">\n            <SortTicket onSetSortBy = { props.onSetSortBy }/>\n            <Link className = \"add-ticket-link\" to = '/ticket/edit'><i className=\"fas fa-plus\"></i></Link>\n        </nav>\n    )\n}\n\nexport default TicketNavBar;","const Types = {\n    ADD_TICKET: 'ADD_TICKET',\n    UPDATE_TICKET: 'UPDATE_TICKET',\n    REMOVE_TICKET: 'REMOVE_TICKET',\n    SET_TICKET: 'SET_TICKET',\n    SET_TICKETS: 'SET_TICKETS',\n    SET_SORT_BY: 'SET_SORT_BY'\n}\n\nexport default Types","export default {\n    save, \n    load,\n    removeOne, \n    removeAll\n}\n\nfunction save(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction load(key) {\n    return JSON.parse(localStorage.getItem(key));\n}\n\nfunction removeOne(key, id) {\n    // it will happend in the backend in real application, \n    // for example in mongodb: \n    // await collection.deleteOne({ _id: ObjectId(ticket.id) });\n\n    const list = load(key);\n    const updatedList = list.filter(value => {\n        return value._id !== id;\n    });\n    save(key, updatedList);\n}\n\nfunction removeAll(key) {\n    localStorage.removeItem(key)\n}","import LocalStorageService from './LocalStorageService';\nimport UtilService from './UtilService';\n\nexport default {\n    query,\n    add,\n    remove,\n    update,\n    getById\n}\n\nconst TICKET_KEY = 'ticket'\n\nasync function query() {\n    try {\n        const tickets = LocalStorageService.load(TICKET_KEY);\n        if (!tickets) {\n            LocalStorageService.save(TICKET_KEY, demoTicketsList)\n            return demoTicketsList\n        }\n        return tickets;\n    } catch (err) {\n        throw err;\n    }\n}\n\nasync function add(ticket) {\n    try {\n        let tickets = LocalStorageService.load(TICKET_KEY) || [];\n        ticket._id = UtilService.makeId()\n        tickets.unshift(ticket)\n        LocalStorageService.save(TICKET_KEY, tickets);\n        return ticket;\n    } catch (err) {\n        throw err;\n    }\n}\n\nasync function remove(id) {\n    try {\n        let tickets = LocalStorageService.load(TICKET_KEY);\n        const updatedTicketsList = tickets.filter( ticket => ticket._id !== id )\n        LocalStorageService.save(TICKET_KEY, updatedTicketsList);\n    } catch (err) {\n        throw err;\n    }\n}\n\nasync function update(ticket) {\n    try {\n        let tickets = LocalStorageService.load(TICKET_KEY);\n        const idx = tickets.findIndex( currTicket => {\n            return ticket._id === currTicket._id \n        });\n        tickets.splice(idx, 1, ticket);\n        LocalStorageService.save(TICKET_KEY, tickets);\n    } catch (err) {\n        throw err;\n    }\n}\n\nasync function getById(id) {\n    try {\n        const tickets = LocalStorageService.load(TICKET_KEY);\n        return tickets.find( ticket => ticket._id === id);\n    } catch (err) {\n        throw err;\n    }\n}\n\n\nconst demoTicketsList = [\n    {\n        \"_id\":\"Dm1xGeGGrv\",\n        \"createdAt\":1581869891925,\n        \"dueDate\":1581869891455,\n        \"subject\":\"Learn To Swim\",\n        \"body\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\"\n    },{\n        \"_id\":\"ltc9EiTA6H\",\n        \"createdAt\":1581854391912,\n        \"dueDate\":1581854334912,\n        \"subject\":\"De Finibus Bonorum et Malorum\",\n        \"body\":\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatu\"\n    },{\n        \"_id\":\"vHwvtL2Rlw\",\n        \"createdAt\":1581854383403,\n        \"dueDate\":0,\n        \"subject\":\"Sem et tortor consequat\",\n        \"body\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n    },{\n        \"_id\":\"L8VNCR5A6F\"\n        ,\"createdAt\":1581854372403\n        ,\"dueDate\":1581854391212\n        ,\"subject\":\"Enim ut tellus elementum\"\n        ,\"body\":\"Ullamcorper eget nulla facilisi etiam dignissim diam quis enim. Elementum integer enim neque volutpat ac tincidunt vitae semper quis. In egestas erat imperdiet sed euismod nisi porta lorem. Dui vivamus arcu felis bibendum. Sem et tortor consequat id porta nibh venenatis cras sed. Aliquam malesuada bibendum arcu vitae elementum curabitur vitae nunc sed. Sociis natoque penatibus et magnis dis parturient montes nascetur. Adipiscing commodo elit at imperdiet dui accumsan sit amet nulla. Nunc sed augue lacus viverra. At lectus urna duis convallis convallis tellus id interdum velit. Dui nunc mattis enim ut tellus elementum sagittis vitae.\"\n    },{\n        \"_id\":\"T8z4oplfmx\",\n        \"createdAt\":1581854360844,\n        \"dueDate\":1581854365844,\n        \"subject\":\"Tempus quam pellentesque\",\n        \"body\":\"Vitae proin sagittis nisl rhoncus mattis. Pretium viverra suspendisse potenti nullam ac tortor vitae. Aliquet lectus proin nibh nisl condimentum id venenatis a. Tortor id aliquet lectus proin nibh nisl condimentum. Tempus quam pellentesque nec nam aliquam sem\"\n    },{\n        \"_id\":\"RWMCSpGtLe\",\n        \"createdAt\":1581854355409,\n        \"dueDate\":0,\n        \"subject\":\"Convallis convallis!\",\n        \"body\":\"Tristique risus nec feugiat in. Vitae proin sagittis nisl rhoncus mattis. Pretium viverra suspendisse potenti nullam ac tortor vitae. Aliquet lectus proin nibh nisl condimentum id venenatis a. Tortor id aliquet lectus proin nibh nisl condimentum. Tempus quam pellentesque nec nam aliquam sem et. Quis auctor elit sed vulputate mi sit. Viverra orci sagittis eu volutpat odio facilisis mauris sit.\"\n    },{\n        \"_id\":\"9ibwY9exkj\",\n        \"createdAt\":1581854348641,\n        \"dueDate\":0,\n        \"subject\":\"Nulla aliquet enim tortor\",\n        \"body\":\"Nulla aliquet enim tortor at auctor urna. Justo nec ultrices dui sapien eget. Posuere ac ut consequat semper viverra nam. Nisi quis eleifend quam adipiscing vitae proin. Massa tincidunt nunc pulvinar sapien et ligula ullamcorper malesuada proin. Egestas congue quisque egestas diam in arcu cursus.\"\n    },{\n        \"_id\":\"qNSzOdyV9v\",\n        \"createdAt\":1581839790647,\n        \"dueDate\":\"1992-01-02\",\n        \"subject\":\"Neque viverra justo\",\n        \"body\":\"Neque viverra justo nec ultrices dui sapien eget mi. At ultrices mi tempus imperdiet nulla malesuada pellentesque elit eget. Magna ac placerat vestibulum lectus mauris ultrices eros in. Vel facilisis volutpat est velit egestas dui id ornare arcu. \"\n    },{\n        \"_id\":\"Mghstd35yR\",\n        \"createdAt\":1581792370871,\n        \"dueDate\":0,\n        \"subject\":\"Tortor dignissim convallis\",\n        \"body\":\" Sed libero enim sed faucibus. Nibh nisl condimentum id venenatis a condimentum vitae sapien. Euismod nisi porta lorem mollis aliquam ut porttitor. Non consectetur a erat nam at lectus urna duis.\"\n    },{\n        \"_id\":\"qM0qFyhLaw\",\n        \"createdAt\":1581791155274,\n        \"dueDate\":0,\n        \"subject\":\"Non consectetur a erat\",\n        \"body\":\"Nec sagittis aliquam malesuada bibendum arcu vitae elementum curabitur. Viverra justo nec ultrices dui sapien eget mi proin. Suspendisse sed nisi lacus sed viverra tellus in. \"\n    },{\n        \"_id\":\"mQGAtdPB8n\",\n        \"createdAt\":1581784710682,\n        \"dueDate\":\"\",\n        \"subject\":\"Aliquam malesuada bibendum\",\n        \"body\":\"Aliquam malesuada bibendum arcu vitae elementum curabitur. Viverra justo nec ultrices dui sapien eget mi proin. Suspendisse sed nisi lacus sed viverra tellus in. !\"\n    },{\n        \"_id\":\"ZBWecfVrEC\",\n        \"createdAt\":1581784699958,\n        \"dueDate\":\"\",\n        \"subject\":\"Morbi non arcu risus quis varius\",\n        \"body\":\"Mus mauris vitae ultricies leo integer malesuada nunc vel. Vitae congue eu consequat ac felis. Tortor at risus viverra adipiscing at. Quam quisque id diam vel quam. In fermentum posuere urna nec tincidunt praesent semper!\"\n    }\n]","import Types from '../Types';\nimport TicketService from '../../services/TicketService';\n\nconst setTicket = ticket => {\n    return {\n        type: Types.SET_TICKET,\n        ticket\n    }\n}\n\nconst setTickets = tickets => {\n    return {\n        type: Types.SET_TICKETS,\n        tickets\n    }\n}\n\nconst addTicket = ticket => {\n    return {\n        type: Types.ADD_TICKET,\n        ticket\n    }\n}\n\nconst removeTicket = id => {\n    return {\n        type: Types.REMOVE_TICKET,\n        id\n    }\n}\n\nconst updateTicket = ticket => {\n    return {\n        type: Types.UPDATE_TICKET,\n        ticket\n    }\n}\n\nconst setSortBy = sortBy => {\n    return {\n        type: Types.SET_SORT_BY, \n        sortBy\n    }\n}\n\nexport const updateSort = sortBy => {\n    return dispatch => {\n        try {\n            dispatch(setSortBy(sortBy));\n        } catch (err) {\n            throw err;\n        }\n    }\n    \n}\n\nexport const query = () => {\n    return async dispatch => {\n        try {\n            const tickets = await TicketService.query();\n            dispatch(setTickets(tickets ? tickets : []));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const add = ticket => {\n    return async dispatch => {\n        try {\n            const addedTicket = await TicketService.add(ticket);\n            dispatch(addTicket(addedTicket));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const remove = id => {\n    return async dispatch => {\n        try {\n            await TicketService.remove(id);\n            dispatch(removeTicket(id));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const update = ticket => {\n    return async dispatch => {\n        try {\n            await TicketService.update(ticket);\n            dispatch(updateTicket(ticket));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const getById = id => {\n    return async dispatch => {\n        try {\n            const ticket = await TicketService.getById(id);\n            dispatch(setTicket(ticket));\n            return ticket;\n        } catch (err ) {\n            throw err;\n        }\n    }\n}\n\n\n","import Swal from 'sweetalert2';\n\nexport default {\n    eventAlert,\n    confirmAlert\n}\n\nfunction eventAlert(title, type) {\n    Swal.fire({\n        type,\n        title,\n        showConfirmButton: false,\n        timer: 2000\n    })\n}\n\nasync function confirmAlert(title) {\n    const res = await Swal.fire({\n        title,\n        icon: 'warning',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n    })\n    return res.value ? true : false;\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Header from '../components/Header';\nimport TicketList from '../components/TicketList';\nimport TicketNavBar from '../components/TicketNavBar';\n\nimport { updateSort, remove } from '../store/actions/TicketAction'; \nimport AlertService from '../services/AlertService';\n\nimport '../styles/global.scss';\n\nconst TicketApp = () => {\n\n    const dispatch = useDispatch();\n    const tickets = useSelector(state => state.TicketReducer.tickets);\n    const sortBy = useSelector(state => state.TicketReducer.sortBy);\n\n    const onSetSortBy = sort => {\n        try {\n            const updatedSortBy = {...sortBy, [sort.name]: sort.value};\n            dispatch(updateSort(updatedSortBy));\n        } catch (err) {\n            AlertService.eventAlert('Failed to Sort Tickets', 'error')\n        }\n    }    \n\n    const onTicketRemove = async id => {\n        try {\n            const res = await AlertService.confirmAlert('Are You Sure?');\n            if (res) dispatch(remove(id));        \n        } catch (err) {\n            AlertService.eventAlert('Failed to Delete Ticket', 'error')\n        }\n    }\n\n    return (\n        <section className = \"ticket-app-page\">\n            <Header />\n            <TicketNavBar onSetSortBy = { onSetSortBy } />\n            <TicketList tickets = { tickets } onTicketRemove = { onTicketRemove } sortBy = { sortBy }/>\n        </section>\n    )\n}\n\nexport default TicketApp;","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getById, remove } from '../store/actions/TicketAction';\nimport Header from '../components/Header';\nimport UtilService from '../services/UtilService';\nimport AlertService from '../services/AlertService';\n\nconst TicketDetails = props => {\n    const ticket = useSelector(state => state.TicketReducer.ticket);\n    const dispatch = useDispatch();\n    const { id } = props.match.params;\n    \n    useEffect(()=> {\n        dispatch(getById(id));\n    }, [])\n\n    const onTicketRemove = async () => {\n        try {\n            const res = await AlertService.confirmAlert('Are You Sure You Want To Delete Ticket? ');\n            if (res) await dispatch(remove(id));        \n            props.history.push('/');\n        } catch (err) {\n            AlertService.eventAlert('Failed to Delete Ticket')\n        }\n    }\n\n    return (\n        <section className = \"ticket-details-page\">\n            <Header />\n            { ticket._id \n                ? <section className = \"ticket-details\">\n                    <h1 className = \"title\">{ticket.subject}</h1>\n                    <h2 className = \"body\">{ticket.body}</h2>\n                    <h2 className = \"created-at\">Created At: {UtilService.dateConvertor(ticket.createdAt)}</h2> \n                    <h2 className = \"due-date\">Due Date: {ticket.dueDate ? UtilService.dateConvertor(ticket.dueDate) : 'Off'}</h2>\n                    <button className = \"remove-btn\" onClick = { (e) => {\n                        e.preventDefault()\n                        onTicketRemove(ticket._id) \n                        }}><i className=\"fas fa-trash-alt\"></i></button>\n                    <Link className = \"edit-link\" to = {`/ticket/edit/${ticket._id}`} ><i className=\"fas fa-edit\"></i> </Link>\n\n                </section>\n                : null\n            }\n\n        </section>\n    )\n}\n\nexport default TicketDetails;","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { getById, add, update } from '../store/actions/TicketAction';\nimport AlertService from '../services/AlertService';\n\nimport Header from '../components/Header';\n\nconst TicketEdit = props => {\n    const dispatch = useDispatch();\n    const { id } = props.match.params;\n    const [ticket, setTicket] = useState({\n        _id: id,\n        createdAt: 0,\n        dueDate: 0,\n        subject: '',\n        body: ''\n    });\n\n    useEffect(()=> {\n        if (id) (async () => {\n            setTicket({...await dispatch(getById(id))});\n        })()\n    }, [])\n\n    const onEditTicket = ev => {\n        const {name, value} = ev.target;\n        setTicket({...ticket, [name]: value});\n    }\n\n    const onTicketSubmit = async ev => {\n        ev.preventDefault()\n        try {\n            ticket.createdAt = id ? ticket.createdAt : Date.now();\n            id ? await dispatch(update(ticket)) : await dispatch(add(ticket));\n            props.history.push(`/`);\n        } catch (err) {            \n            AlertService.eventAlert(`Failed to ${id ? 'Update' : 'Add'} Ticket` , 'error');\n        }\n        \n    }\n\n    return (\n        <section className = \"ticket-edit\">\n            <Header />\n            <h1 className = \"title\">{id ? 'Edit Ticket' : 'Create Ticket'}</h1>\n            <form  onSubmit = { onTicketSubmit}>\n                <input type = \"text\" name = \"subject\" placeholder = \"Title\" value = { ticket.subject } onChange = { onEditTicket } />\n                <textarea rows =\"4\" type = \"text\" name = \"body\" placeholder = \"Body\" value = { ticket.body } onChange = { onEditTicket } />\n                <input type = \"date\" name = \"dueDate\" placeholder = \"Due Date\" value = { ticket.dueDate } onChange = { onEditTicket }/>\n                <input type = \"submit\" placeholder = { id ? 'Update Ticket' : 'Add Ticket'} />\n            </form>\n        </section>\n    )\n}\n\nexport default TicketEdit;","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux';\n\nimport TicketApp from './pages/TicketApp';\nimport TicketDetails from './pages/TicketDetails';\nimport TicketEdit from './pages/TicketEdit';\nimport { query } from './store/actions/TicketAction';\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(query());\n  })\n\n  return (\n   <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path = '/ticket/edit/:id?' component = { TicketEdit } />\n          <Route path = '/ticket/:id' component = { TicketDetails } />\n          <Route path = '/' component = { TicketApp } />\n        </Switch>\n      </div>\n   </Router>\n  );\n}\n\nexport default App;\n","import Types from '../Types';\n\nlet initState = {\n    sortBy: {\n        key: 'createdAt',\n        order: '1'\n    },\n    tickets: [],\n    ticket: {}\n}\n\nfunction TicketReducer ( state = initState, action ) {\n    switch(action.type) {\n        case Types.ADD_TICKET: {\n            return {\n                ...state, \n                tickets: [...state.tickets, action.ticket]\n            }\n        } \n        case Types.REMOVE_TICKET: {\n            return {\n                ...state, \n                tickets: state.tickets.filter( ticket => {\n                    return ticket._id !== action.id;\n                })\n            }\n        }\n        case Types.UPDATE_TICKET: {\n            return {\n                ...state,\n                tickets: state.tickets.map(ticket => {\n                    if (ticket._id == action.ticket._id) {\n                        return {...action.ticket}\n                    }\n                    return ticket\n                })\n            }\n        }\n        case Types.SET_TICKET: {\n            return {\n                ...state,\n                ticket: action.ticket\n            }\n        }\n        case Types.SET_TICKETS: {\n            return {\n                ...state,\n                tickets: action.tickets\n            }\n        }\n        case Types.SET_SORT_BY: {            \n            return {\n                ...state,\n                sortBy: action.sortBy\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default TicketReducer;","import { combineReducers } from 'redux';\nimport TicketReducer from './TicketReducer';\n\nconst combinedReducer = combineReducers({\n    TicketReducer\n})\n\nexport default combinedReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport reducer from './store/reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(thunk)\n)\nReactDOM.render(\n    <Provider store = { store }> \n        <App /> \n    </Provider>, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}